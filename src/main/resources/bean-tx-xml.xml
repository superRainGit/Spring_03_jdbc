<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSoure" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="url" value="${jdbc.jdbcurl}"></property>
		<property name="validationQuery" value="${jdbc.validationQuery}"></property>
	</bean>

	<!-- 配置JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSoure"></property>
	</bean>

	<bean id="bookshopDao" class="cn.zhang.xml.BookshopDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>

	<bean id="bookShopService" class="cn.zhang.xml.BookShopServiceImpl">
		<property name="bookShopDao" ref="bookshopDao"></property>
	</bean>

	<bean id="cashier" class="cn.zhang.xml.CashierImpl">
		<property name="bookShopService" ref="bookShopService"></property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSoure"></property>
	</bean>
	
	<!-- 配置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 通过为name属性指定方法  可以为具体的某个方法指定事务的属性 -->
			<tx:method name="buy" propagation="REQUIRES_NEW"/>
			<!-- 同时可以使用通配符的方式为某一类方法指定事务属性 -->
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置将事务插入到哪些切点上 -->
	<!-- 
		一种是将包名进行整合  方便切入点表达式的
		另一种是配置多个aop:config标签  配置多个
	-->
	<aop:config>
		<aop:pointcut expression="execution(* cn.zhang.xml.BookShopService.*(..))" id="bookShopPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bookShopPointCut"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut expression="execution(* cn.zhang.xml.Cashier.*(..))" id="cashierPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="cashierPointCut"/>
	</aop:config>

</beans>
