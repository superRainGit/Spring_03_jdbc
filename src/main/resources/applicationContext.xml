<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="cn.zhang.tx"></context:component-scan>

	<!-- 配置Properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- DRUID数据源会自动的根据你的URL进行数据库驱动的加载 -->
		<!-- <property name="driver" value="${jdbc.driverclass}"></property> -->
		<property name="url" value="${jdbc.jdbcurl}"></property>
		<property name="validationQuery" value="${jdbc.validationQuery}"></property>
	</bean>
	
	<!-- 配置JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" value="#{dataSource}"></property>
	</bean>
	
	<!-- 
		配置事务管理器 
		事务管理器肯定管辖的就是数据源  因此需要配置一个数据源
	-->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 
		启用事务注解
		如果事务管理器的bean的id是transactionManager
		那么tx:annotation-driven的transaction-manager是可以省略的
	-->
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
	
</beans>
